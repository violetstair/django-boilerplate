# Generated by Django 3.0.7 on 2020-06-22 12:49

from django.db import migrations, models
import users.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=256, unique=True, verbose_name='이메일')),
                ('username', models.CharField(max_length=20, unique=True, verbose_name='사용자이름')),
                ('is_active', models.BooleanField(default=True, verbose_name='활성 계정')),
                ('is_admin', models.BooleanField(default=False, verbose_name='관리자')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='최상위 관리자')),
                ('is_staff', models.BooleanField(default=False, verbose_name='운영자')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='가입일')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='최근접속')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '회원정보',
                'verbose_name_plural': '회원정보목록',
                'db_table': 'accounts',
                'ordering': ['-created_at'],
            },
            managers=[
                ('object', users.models.UserManager()),
            ],
        ),
    ]
